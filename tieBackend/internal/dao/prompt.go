// =================================================================================
// This is auto-generated by GoFrame CLI tool only once. Fill this file as you wish.
// =================================================================================

package dao

import (
	"context"
	"encoding/json"
	"github.com/gogf/gf-demo-user/v2/internal/dao/internal"
	"github.com/gogf/gf-demo-user/v2/internal/model/do"
	"github.com/gogf/gf-demo-user/v2/internal/model/entity"
	"log"
)

// internalPromptDao is internal type for wrapping internal DAO implements.
type internalPromptDao = *internal.PromptDao

// promptDao is the data access object for table prompt.
// You can define custom methods on it to extend its functionality as you wish.
type promptDao struct {
	internalPromptDao
}

var (
	// Prompt is globally public accessible object for table prompt operations.
	Prompt = promptDao{
		internal.NewPromptDao(),
	}
)

// Fill with you ideas below.
func (d *promptDao) GetPromptById(ctx context.Context, id string) (*entity.Prompt, error) {
	model := &entity.Prompt{}
	err := Prompt.Ctx(ctx).Where(do.Prompt{Pid: id}).Limit(1).Scan(&model)
	if err != nil {
		log.Fatalf("dao GetPromptById error:%v", err)
		return nil, err
	}
	temp, _ := json.Marshal(model)
	log.Println(string(temp))
	return model, err
}

func (d *promptDao) GetPromptByIdList(ctx context.Context, idList []string) (map[string]*entity.Prompt, error) {
	modelList := make([]*entity.Prompt, 0)
	err := Prompt.Ctx(ctx).Where("pid", idList).Scan(&modelList)
	if err != nil {
		log.Fatalf("dao GetPromptById error:%v", err)
		return nil, err
	}
	temp, _ := json.Marshal(modelList)
	log.Println(string(temp))
	res := make(map[string]*entity.Prompt)
	for _, item := range modelList {
		res[item.Pid] = item
	}
	return res, err
}
