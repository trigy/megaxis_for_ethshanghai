// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// PromptDao is the data access object for table prompt.
type PromptDao struct {
	table   string        // table is the underlying table name of the DAO.
	group   string        // group is the database configuration group name of current DAO.
	columns PromptColumns // columns contains all the column names of Table for convenient usage.
}

// PromptColumns defines and stores column names for table prompt.
type PromptColumns struct {
	Id         string // pk
	Pid        string // Prompt ID
	Name       string // Prompt Name
	Desc       string // Description
	Price      string // Prompt Price
	Type       string // Prompt Type
	Content    string // Prompt Content
	Params     string // Prompt Params
	Author     string // Prompt Author
	Taglist    string // Prompt Tag
	Avatar     string // Prompt 图片
	Examples   string // Prompt examples
	CreateTime string // Created Time
	UpdateTime string // Updated Time
	Nftid      string //
}

// promptColumns holds the columns for table prompt.
var promptColumns = PromptColumns{
	Id:         "id",
	Pid:        "pid",
	Name:       "name",
	Desc:       "desc",
	Price:      "price",
	Type:       "type",
	Content:    "content",
	Params:     "params",
	Author:     "author",
	Taglist:    "taglist",
	Avatar:     "avatar",
	Examples:   "examples",
	CreateTime: "create_time",
	UpdateTime: "update_time",
	Nftid:      "nftid",
}

// NewPromptDao creates and returns a new DAO object for table data access.
func NewPromptDao() *PromptDao {
	return &PromptDao{
		group:   "default",
		table:   "prompt",
		columns: promptColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *PromptDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *PromptDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *PromptDao) Columns() PromptColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *PromptDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *PromptDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *PromptDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
